enum Gender {
  MALE
  FEMALE
  OTHER
}

type Customer {
  id: ID!
  email: String!
  name: String!
  cpf: String!
  gender: Gender
  phone: String
  birthDate: String
}

type Market {
  id: ID!
  address: String!
  asset: String!
  name: String!
}

type ProductCategory {
  id: String!
  description: String
}

type Product {
  id: ID!
  category: String!
  asset: String!
  description: String
  price: Long!
}

type FullItem {
  id: ID!
  category: String!
  asset: String!
  description: String
  price: Long!
  quantity: Long!
}

enum CashBoxStatus {
  AVAILABLE,
  IN_USE,
  CLOSED
}

type CashBox {
  id: ID!
  marketId: Long!
  status: CashBoxStatus!
}

enum PurchaseStatus {
  STARTED,
  CASHBOX_APPROVED,
  FINISHED,
  ABORTED
}

type Purchase {
  id: ID!
  customerId: Long!
  cashboxId: Long!
  products: [FullItem!]!
  status: PurchaseStatus!
  startedAt: String!
  finishedAt: String
  total: Long!
}

type PurchaseItem {
  purchaseId: Long!
  productId: String!
  quantity: Long!
}

type Shelf {
  id: ID!
  category: String!
}

type WishList {
  id: ID!
  customerId: Long!
  createdAt: String!
  products: [FullItem!]!
}

type WishListItem {
  productId: Long!
  wishListId: Long!
}

type Query {
  allMarkets: [Market!]!
  market(id: ID!): Market

  customerById(id: ID!): Customer
  customerByEmail(email: String!): Customer
  customerPurchases(customerId: ID!): [Purchase!]!
  customerWishLists(customerId: ID!, active: Boolean = true): [WishList!]!

  allProducts: [Product!]!
  product(id: ID!): Product
}

type Mutation {
  createCustomer(
    email:  String!
    name: String!
    cpf: String!
    gender: Gender = null
    phone: String = null
    birthDate: String = null
  ): Customer!

  createWishList(customerId: ID!): WishList!
  addProductToWishList(wishListId: ID!, productId: ID!): WishList!
  removeProductFromWishList(wishListId: ID!, productId: ID!): WishList!
  disableWishList(wishListId: ID!): WishList!

  startPurchase(customerId: ID!, cashboxId: ID!): Purchase!
  addItemToPurchase(purchaseId: ID!, productId: ID!): Purchase!
  cashboxApprovePurchase(purchaseId: ID!): Purchase!
  customerApprovePurchase(purchaseId: ID!): Purchase!
}